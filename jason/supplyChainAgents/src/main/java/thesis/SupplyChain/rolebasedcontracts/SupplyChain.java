package thesis.SupplyChain.rolebasedcontracts;

import io.reactivex.Flowable;
import io.reactivex.functions.Function;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.EventEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.Event;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.abi.datatypes.generated.Uint8;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.request.EthFilter;
import org.web3j.protocol.core.methods.response.BaseEventResponse;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple11;
import org.web3j.tuples.generated.Tuple2;
import org.web3j.tuples.generated.Tuple7;
import org.web3j.tuples.generated.Tuple9;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 4.8.9.
 */
@SuppressWarnings("rawtypes")
public class SupplyChain extends Contract {
    public static final String BINARY = "";

    public static final String FUNC_ADDMANUFACTURER = "addManufacturer";

    public static final String FUNC_ADDRETAILER = "addRetailer";

    public static final String FUNC_ADDWHOLESALER = "addWholesaler";

    public static final String FUNC_FETCHITEMBUFFERONE = "fetchItemBufferOne";

    public static final String FUNC_FETCHITEMBUFFERTWO = "fetchItemBufferTwo";

    public static final String FUNC_FETCHRETAILER = "fetchRetailer";

    public static final String FUNC_FETCHWHOLESALER = "fetchWholesaler";

    public static final String FUNC_FETCHITEMHISTORY = "fetchitemHistory";

    public static final String FUNC_ISMANUFACTURER = "isManufacturer";

    public static final String FUNC_ISOWNER = "isOwner";

    public static final String FUNC_ISRETAILER = "isRetailer";

    public static final String FUNC_ISWHOLESALER = "isWholesaler";

    public static final String FUNC_KILL = "kill";

    public static final String FUNC_OWNERLOOKUP = "ownerLookup";

    public static final String FUNC_PACKAGEITEMBYMANUFACTURER = "packageItemByManufacturer";

    public static final String FUNC_PRODUCEITEMBYMANUFACTURER = "produceItemByManufacturer";

    public static final String FUNC_PURCHASEITEMBYRETAILER = "purchaseItemByRetailer";

    public static final String FUNC_PURCHASEITEMBYWHOLESALER = "purchaseItemByWholesaler";

    public static final String FUNC_RECEIVEDITEMBYRETAILER = "receivedItemByRetailer";

    public static final String FUNC_RECEIVEDITEMBYWHOLESALER = "receivedItemByWholesaler";

    public static final String FUNC_RENOUNCEMANUFACTURER = "renounceManufacturer";

    public static final String FUNC_RENOUNCEOWNERSHIP = "renounceOwnership";

    public static final String FUNC_RENOUNCERETAILER = "renounceRetailer";

    public static final String FUNC_RENOUNCEWHOLESALER = "renounceWholesaler";

    public static final String FUNC_SELLITEMBYMANUFACTURER = "sellItemByManufacturer";

    public static final String FUNC_SELLITEMBYWHOLESALER = "sellItemByWholesaler";

    public static final String FUNC_SHIPPEDITEMBYMANUFACTURER = "shippedItemByManufacturer";

    public static final String FUNC_SHIPPEDITEMBYWHOLESALER = "shippedItemByWholesaler";

    public static final String FUNC_TRANSFEROWNERSHIP = "transferOwnership";

    public static final Event FORSALEBYMANUFACTURER_EVENT = new Event("ForSaleByManufacturer", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
    ;

    public static final Event FORSALEBYWHOLESALER_EVENT = new Event("ForSaleByWholesaler", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
    ;

    public static final Event MANUFACTURERADDED_EVENT = new Event("ManufacturerAdded", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}));
    ;

    public static final Event MANUFACTURERREMOVED_EVENT = new Event("ManufacturerRemoved", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}));
    ;

    public static final Event PACKAGEDBYMANUFACTURER_EVENT = new Event("PackagedByManufacturer", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
    ;

    public static final Event PRODUCEBYMANUFACTURER_EVENT = new Event("ProduceByManufacturer", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
    ;

    public static final Event PURCHASEDBYRETAILER_EVENT = new Event("PurchasedByRetailer", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
    ;

    public static final Event PURCHASEDBYWHOLESALER_EVENT = new Event("PurchasedByWholesaler", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
    ;

    public static final Event RECEIVEDBYRETAILER_EVENT = new Event("ReceivedByRetailer", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
    ;

    public static final Event RECEIVEDBYWHOLESALER_EVENT = new Event("ReceivedByWholesaler", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
    ;

    public static final Event RETAILERADDED_EVENT = new Event("RetailerAdded", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}));
    ;

    public static final Event RETAILERREMOVED_EVENT = new Event("RetailerRemoved", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}));
    ;

    public static final Event SHIPPEDBYMANUFACTURER_EVENT = new Event("ShippedByManufacturer", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
    ;

    public static final Event SHIPPEDBYWHOLESALER_EVENT = new Event("ShippedByWholesaler", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
    ;

    public static final Event TRANSFEROWNERSHIP_EVENT = new Event("TransferOwnership", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}));
    ;

    public static final Event WHOLESALERADDED_EVENT = new Event("WholesalerAdded", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}));
    ;

    public static final Event WHOLESALERREMOVED_EVENT = new Event("WholesalerRemoved", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}));
    ;

    @Deprecated
    protected SupplyChain(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected SupplyChain(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected SupplyChain(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected SupplyChain(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public List<ForSaleByManufacturerEventResponse> getForSaleByManufacturerEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(FORSALEBYMANUFACTURER_EVENT, transactionReceipt);
        ArrayList<ForSaleByManufacturerEventResponse> responses = new ArrayList<ForSaleByManufacturerEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            ForSaleByManufacturerEventResponse typedResponse = new ForSaleByManufacturerEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.upc = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<ForSaleByManufacturerEventResponse> forSaleByManufacturerEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, ForSaleByManufacturerEventResponse>() {
            @Override
            public ForSaleByManufacturerEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(FORSALEBYMANUFACTURER_EVENT, log);
                ForSaleByManufacturerEventResponse typedResponse = new ForSaleByManufacturerEventResponse();
                typedResponse.log = log;
                typedResponse.upc = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<ForSaleByManufacturerEventResponse> forSaleByManufacturerEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(FORSALEBYMANUFACTURER_EVENT));
        return forSaleByManufacturerEventFlowable(filter);
    }

    public List<ForSaleByWholesalerEventResponse> getForSaleByWholesalerEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(FORSALEBYWHOLESALER_EVENT, transactionReceipt);
        ArrayList<ForSaleByWholesalerEventResponse> responses = new ArrayList<ForSaleByWholesalerEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            ForSaleByWholesalerEventResponse typedResponse = new ForSaleByWholesalerEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.upc = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<ForSaleByWholesalerEventResponse> forSaleByWholesalerEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, ForSaleByWholesalerEventResponse>() {
            @Override
            public ForSaleByWholesalerEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(FORSALEBYWHOLESALER_EVENT, log);
                ForSaleByWholesalerEventResponse typedResponse = new ForSaleByWholesalerEventResponse();
                typedResponse.log = log;
                typedResponse.upc = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<ForSaleByWholesalerEventResponse> forSaleByWholesalerEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(FORSALEBYWHOLESALER_EVENT));
        return forSaleByWholesalerEventFlowable(filter);
    }

    public List<ManufacturerAddedEventResponse> getManufacturerAddedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(MANUFACTURERADDED_EVENT, transactionReceipt);
        ArrayList<ManufacturerAddedEventResponse> responses = new ArrayList<ManufacturerAddedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            ManufacturerAddedEventResponse typedResponse = new ManufacturerAddedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.account = (String) eventValues.getIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<ManufacturerAddedEventResponse> manufacturerAddedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, ManufacturerAddedEventResponse>() {
            @Override
            public ManufacturerAddedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(MANUFACTURERADDED_EVENT, log);
                ManufacturerAddedEventResponse typedResponse = new ManufacturerAddedEventResponse();
                typedResponse.log = log;
                typedResponse.account = (String) eventValues.getIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<ManufacturerAddedEventResponse> manufacturerAddedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(MANUFACTURERADDED_EVENT));
        return manufacturerAddedEventFlowable(filter);
    }

    public List<ManufacturerRemovedEventResponse> getManufacturerRemovedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(MANUFACTURERREMOVED_EVENT, transactionReceipt);
        ArrayList<ManufacturerRemovedEventResponse> responses = new ArrayList<ManufacturerRemovedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            ManufacturerRemovedEventResponse typedResponse = new ManufacturerRemovedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.account = (String) eventValues.getIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<ManufacturerRemovedEventResponse> manufacturerRemovedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, ManufacturerRemovedEventResponse>() {
            @Override
            public ManufacturerRemovedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(MANUFACTURERREMOVED_EVENT, log);
                ManufacturerRemovedEventResponse typedResponse = new ManufacturerRemovedEventResponse();
                typedResponse.log = log;
                typedResponse.account = (String) eventValues.getIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<ManufacturerRemovedEventResponse> manufacturerRemovedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(MANUFACTURERREMOVED_EVENT));
        return manufacturerRemovedEventFlowable(filter);
    }

    public List<PackagedByManufacturerEventResponse> getPackagedByManufacturerEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(PACKAGEDBYMANUFACTURER_EVENT, transactionReceipt);
        ArrayList<PackagedByManufacturerEventResponse> responses = new ArrayList<PackagedByManufacturerEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            PackagedByManufacturerEventResponse typedResponse = new PackagedByManufacturerEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.upc = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<PackagedByManufacturerEventResponse> packagedByManufacturerEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, PackagedByManufacturerEventResponse>() {
            @Override
            public PackagedByManufacturerEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(PACKAGEDBYMANUFACTURER_EVENT, log);
                PackagedByManufacturerEventResponse typedResponse = new PackagedByManufacturerEventResponse();
                typedResponse.log = log;
                typedResponse.upc = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<PackagedByManufacturerEventResponse> packagedByManufacturerEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(PACKAGEDBYMANUFACTURER_EVENT));
        return packagedByManufacturerEventFlowable(filter);
    }

    public List<ProduceByManufacturerEventResponse> getProduceByManufacturerEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(PRODUCEBYMANUFACTURER_EVENT, transactionReceipt);
        ArrayList<ProduceByManufacturerEventResponse> responses = new ArrayList<ProduceByManufacturerEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            ProduceByManufacturerEventResponse typedResponse = new ProduceByManufacturerEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.upc = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<ProduceByManufacturerEventResponse> produceByManufacturerEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, ProduceByManufacturerEventResponse>() {
            @Override
            public ProduceByManufacturerEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(PRODUCEBYMANUFACTURER_EVENT, log);
                ProduceByManufacturerEventResponse typedResponse = new ProduceByManufacturerEventResponse();
                typedResponse.log = log;
                typedResponse.upc = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<ProduceByManufacturerEventResponse> produceByManufacturerEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(PRODUCEBYMANUFACTURER_EVENT));
        return produceByManufacturerEventFlowable(filter);
    }

    public List<PurchasedByRetailerEventResponse> getPurchasedByRetailerEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(PURCHASEDBYRETAILER_EVENT, transactionReceipt);
        ArrayList<PurchasedByRetailerEventResponse> responses = new ArrayList<PurchasedByRetailerEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            PurchasedByRetailerEventResponse typedResponse = new PurchasedByRetailerEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.upc = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<PurchasedByRetailerEventResponse> purchasedByRetailerEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, PurchasedByRetailerEventResponse>() {
            @Override
            public PurchasedByRetailerEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(PURCHASEDBYRETAILER_EVENT, log);
                PurchasedByRetailerEventResponse typedResponse = new PurchasedByRetailerEventResponse();
                typedResponse.log = log;
                typedResponse.upc = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<PurchasedByRetailerEventResponse> purchasedByRetailerEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(PURCHASEDBYRETAILER_EVENT));
        return purchasedByRetailerEventFlowable(filter);
    }

    public List<PurchasedByWholesalerEventResponse> getPurchasedByWholesalerEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(PURCHASEDBYWHOLESALER_EVENT, transactionReceipt);
        ArrayList<PurchasedByWholesalerEventResponse> responses = new ArrayList<PurchasedByWholesalerEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            PurchasedByWholesalerEventResponse typedResponse = new PurchasedByWholesalerEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.upc = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<PurchasedByWholesalerEventResponse> purchasedByWholesalerEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, PurchasedByWholesalerEventResponse>() {
            @Override
            public PurchasedByWholesalerEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(PURCHASEDBYWHOLESALER_EVENT, log);
                PurchasedByWholesalerEventResponse typedResponse = new PurchasedByWholesalerEventResponse();
                typedResponse.log = log;
                typedResponse.upc = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<PurchasedByWholesalerEventResponse> purchasedByWholesalerEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(PURCHASEDBYWHOLESALER_EVENT));
        return purchasedByWholesalerEventFlowable(filter);
    }

    public List<ReceivedByRetailerEventResponse> getReceivedByRetailerEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(RECEIVEDBYRETAILER_EVENT, transactionReceipt);
        ArrayList<ReceivedByRetailerEventResponse> responses = new ArrayList<ReceivedByRetailerEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            ReceivedByRetailerEventResponse typedResponse = new ReceivedByRetailerEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.upc = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<ReceivedByRetailerEventResponse> receivedByRetailerEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, ReceivedByRetailerEventResponse>() {
            @Override
            public ReceivedByRetailerEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(RECEIVEDBYRETAILER_EVENT, log);
                ReceivedByRetailerEventResponse typedResponse = new ReceivedByRetailerEventResponse();
                typedResponse.log = log;
                typedResponse.upc = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<ReceivedByRetailerEventResponse> receivedByRetailerEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(RECEIVEDBYRETAILER_EVENT));
        return receivedByRetailerEventFlowable(filter);
    }

    public List<ReceivedByWholesalerEventResponse> getReceivedByWholesalerEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(RECEIVEDBYWHOLESALER_EVENT, transactionReceipt);
        ArrayList<ReceivedByWholesalerEventResponse> responses = new ArrayList<ReceivedByWholesalerEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            ReceivedByWholesalerEventResponse typedResponse = new ReceivedByWholesalerEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.upc = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<ReceivedByWholesalerEventResponse> receivedByWholesalerEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, ReceivedByWholesalerEventResponse>() {
            @Override
            public ReceivedByWholesalerEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(RECEIVEDBYWHOLESALER_EVENT, log);
                ReceivedByWholesalerEventResponse typedResponse = new ReceivedByWholesalerEventResponse();
                typedResponse.log = log;
                typedResponse.upc = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<ReceivedByWholesalerEventResponse> receivedByWholesalerEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(RECEIVEDBYWHOLESALER_EVENT));
        return receivedByWholesalerEventFlowable(filter);
    }

    public List<RetailerAddedEventResponse> getRetailerAddedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(RETAILERADDED_EVENT, transactionReceipt);
        ArrayList<RetailerAddedEventResponse> responses = new ArrayList<RetailerAddedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            RetailerAddedEventResponse typedResponse = new RetailerAddedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.account = (String) eventValues.getIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<RetailerAddedEventResponse> retailerAddedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, RetailerAddedEventResponse>() {
            @Override
            public RetailerAddedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(RETAILERADDED_EVENT, log);
                RetailerAddedEventResponse typedResponse = new RetailerAddedEventResponse();
                typedResponse.log = log;
                typedResponse.account = (String) eventValues.getIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<RetailerAddedEventResponse> retailerAddedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(RETAILERADDED_EVENT));
        return retailerAddedEventFlowable(filter);
    }

    public List<RetailerRemovedEventResponse> getRetailerRemovedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(RETAILERREMOVED_EVENT, transactionReceipt);
        ArrayList<RetailerRemovedEventResponse> responses = new ArrayList<RetailerRemovedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            RetailerRemovedEventResponse typedResponse = new RetailerRemovedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.account = (String) eventValues.getIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<RetailerRemovedEventResponse> retailerRemovedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, RetailerRemovedEventResponse>() {
            @Override
            public RetailerRemovedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(RETAILERREMOVED_EVENT, log);
                RetailerRemovedEventResponse typedResponse = new RetailerRemovedEventResponse();
                typedResponse.log = log;
                typedResponse.account = (String) eventValues.getIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<RetailerRemovedEventResponse> retailerRemovedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(RETAILERREMOVED_EVENT));
        return retailerRemovedEventFlowable(filter);
    }

    public List<ShippedByManufacturerEventResponse> getShippedByManufacturerEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(SHIPPEDBYMANUFACTURER_EVENT, transactionReceipt);
        ArrayList<ShippedByManufacturerEventResponse> responses = new ArrayList<ShippedByManufacturerEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            ShippedByManufacturerEventResponse typedResponse = new ShippedByManufacturerEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.upc = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<ShippedByManufacturerEventResponse> shippedByManufacturerEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, ShippedByManufacturerEventResponse>() {
            @Override
            public ShippedByManufacturerEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(SHIPPEDBYMANUFACTURER_EVENT, log);
                ShippedByManufacturerEventResponse typedResponse = new ShippedByManufacturerEventResponse();
                typedResponse.log = log;
                typedResponse.upc = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<ShippedByManufacturerEventResponse> shippedByManufacturerEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(SHIPPEDBYMANUFACTURER_EVENT));
        return shippedByManufacturerEventFlowable(filter);
    }

    public List<ShippedByWholesalerEventResponse> getShippedByWholesalerEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(SHIPPEDBYWHOLESALER_EVENT, transactionReceipt);
        ArrayList<ShippedByWholesalerEventResponse> responses = new ArrayList<ShippedByWholesalerEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            ShippedByWholesalerEventResponse typedResponse = new ShippedByWholesalerEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.upc = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<ShippedByWholesalerEventResponse> shippedByWholesalerEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, ShippedByWholesalerEventResponse>() {
            @Override
            public ShippedByWholesalerEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(SHIPPEDBYWHOLESALER_EVENT, log);
                ShippedByWholesalerEventResponse typedResponse = new ShippedByWholesalerEventResponse();
                typedResponse.log = log;
                typedResponse.upc = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<ShippedByWholesalerEventResponse> shippedByWholesalerEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(SHIPPEDBYWHOLESALER_EVENT));
        return shippedByWholesalerEventFlowable(filter);
    }

    public List<TransferOwnershipEventResponse> getTransferOwnershipEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(TRANSFEROWNERSHIP_EVENT, transactionReceipt);
        ArrayList<TransferOwnershipEventResponse> responses = new ArrayList<TransferOwnershipEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            TransferOwnershipEventResponse typedResponse = new TransferOwnershipEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.oldOwner = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.newOwner = (String) eventValues.getIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<TransferOwnershipEventResponse> transferOwnershipEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, TransferOwnershipEventResponse>() {
            @Override
            public TransferOwnershipEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(TRANSFEROWNERSHIP_EVENT, log);
                TransferOwnershipEventResponse typedResponse = new TransferOwnershipEventResponse();
                typedResponse.log = log;
                typedResponse.oldOwner = (String) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.newOwner = (String) eventValues.getIndexedValues().get(1).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<TransferOwnershipEventResponse> transferOwnershipEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(TRANSFEROWNERSHIP_EVENT));
        return transferOwnershipEventFlowable(filter);
    }

    public List<WholesalerAddedEventResponse> getWholesalerAddedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(WHOLESALERADDED_EVENT, transactionReceipt);
        ArrayList<WholesalerAddedEventResponse> responses = new ArrayList<WholesalerAddedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            WholesalerAddedEventResponse typedResponse = new WholesalerAddedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.account = (String) eventValues.getIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<WholesalerAddedEventResponse> wholesalerAddedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, WholesalerAddedEventResponse>() {
            @Override
            public WholesalerAddedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(WHOLESALERADDED_EVENT, log);
                WholesalerAddedEventResponse typedResponse = new WholesalerAddedEventResponse();
                typedResponse.log = log;
                typedResponse.account = (String) eventValues.getIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<WholesalerAddedEventResponse> wholesalerAddedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(WHOLESALERADDED_EVENT));
        return wholesalerAddedEventFlowable(filter);
    }

    public List<WholesalerRemovedEventResponse> getWholesalerRemovedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(WHOLESALERREMOVED_EVENT, transactionReceipt);
        ArrayList<WholesalerRemovedEventResponse> responses = new ArrayList<WholesalerRemovedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            WholesalerRemovedEventResponse typedResponse = new WholesalerRemovedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.account = (String) eventValues.getIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<WholesalerRemovedEventResponse> wholesalerRemovedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, WholesalerRemovedEventResponse>() {
            @Override
            public WholesalerRemovedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(WHOLESALERREMOVED_EVENT, log);
                WholesalerRemovedEventResponse typedResponse = new WholesalerRemovedEventResponse();
                typedResponse.log = log;
                typedResponse.account = (String) eventValues.getIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<WholesalerRemovedEventResponse> wholesalerRemovedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(WHOLESALERREMOVED_EVENT));
        return wholesalerRemovedEventFlowable(filter);
    }

    public RemoteFunctionCall<TransactionReceipt> addManufacturer(String account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ADDMANUFACTURER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, account)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> addRetailer(String account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ADDRETAILER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, account)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> addWholesaler(String account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ADDWHOLESALER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, account)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<Tuple7<BigInteger, BigInteger, String, String, String, BigInteger, BigInteger>> fetchItemBufferOne(BigInteger _upc) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_FETCHITEMBUFFERONE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_upc)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Address>() {}, new TypeReference<Address>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}));
        return new RemoteFunctionCall<Tuple7<BigInteger, BigInteger, String, String, String, BigInteger, BigInteger>>(function,
                new Callable<Tuple7<BigInteger, BigInteger, String, String, String, BigInteger, BigInteger>>() {
                    @Override
                    public Tuple7<BigInteger, BigInteger, String, String, String, BigInteger, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple7<BigInteger, BigInteger, String, String, String, BigInteger, BigInteger>(
                                (BigInteger) results.get(0).getValue(), 
                                (BigInteger) results.get(1).getValue(), 
                                (String) results.get(2).getValue(), 
                                (String) results.get(3).getValue(), 
                                (String) results.get(4).getValue(), 
                                (BigInteger) results.get(5).getValue(), 
                                (BigInteger) results.get(6).getValue());
                    }
                });
    }

    public RemoteFunctionCall<Tuple11<BigInteger, BigInteger, BigInteger, String, BigInteger, BigInteger, BigInteger, String, String, String, String>> fetchItemBufferTwo(BigInteger _upc) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_FETCHITEMBUFFERTWO, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_upc)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint8>() {}, new TypeReference<Address>() {}, new TypeReference<Address>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
        return new RemoteFunctionCall<Tuple11<BigInteger, BigInteger, BigInteger, String, BigInteger, BigInteger, BigInteger, String, String, String, String>>(function,
                new Callable<Tuple11<BigInteger, BigInteger, BigInteger, String, BigInteger, BigInteger, BigInteger, String, String, String, String>>() {
                    @Override
                    public Tuple11<BigInteger, BigInteger, BigInteger, String, BigInteger, BigInteger, BigInteger, String, String, String, String> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple11<BigInteger, BigInteger, BigInteger, String, BigInteger, BigInteger, BigInteger, String, String, String, String>(
                                (BigInteger) results.get(0).getValue(), 
                                (BigInteger) results.get(1).getValue(), 
                                (BigInteger) results.get(2).getValue(), 
                                (String) results.get(3).getValue(), 
                                (BigInteger) results.get(4).getValue(), 
                                (BigInteger) results.get(5).getValue(), 
                                (BigInteger) results.get(6).getValue(), 
                                (String) results.get(7).getValue(), 
                                (String) results.get(8).getValue(), 
                                (String) results.get(9).getValue(), 
                                (String) results.get(10).getValue());
                    }
                });
    }

    public RemoteFunctionCall<Tuple9<BigInteger, BigInteger, BigInteger, String, BigInteger, BigInteger, BigInteger, String, String>> fetchRetailer(BigInteger _upc) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_FETCHRETAILER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_upc)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint8>() {}, new TypeReference<Address>() {}, new TypeReference<Utf8String>() {}));
        return new RemoteFunctionCall<Tuple9<BigInteger, BigInteger, BigInteger, String, BigInteger, BigInteger, BigInteger, String, String>>(function,
                new Callable<Tuple9<BigInteger, BigInteger, BigInteger, String, BigInteger, BigInteger, BigInteger, String, String>>() {
                    @Override
                    public Tuple9<BigInteger, BigInteger, BigInteger, String, BigInteger, BigInteger, BigInteger, String, String> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple9<BigInteger, BigInteger, BigInteger, String, BigInteger, BigInteger, BigInteger, String, String>(
                                (BigInteger) results.get(0).getValue(), 
                                (BigInteger) results.get(1).getValue(), 
                                (BigInteger) results.get(2).getValue(), 
                                (String) results.get(3).getValue(), 
                                (BigInteger) results.get(4).getValue(), 
                                (BigInteger) results.get(5).getValue(), 
                                (BigInteger) results.get(6).getValue(), 
                                (String) results.get(7).getValue(), 
                                (String) results.get(8).getValue());
                    }
                });
    }

    public RemoteFunctionCall<Tuple9<BigInteger, BigInteger, BigInteger, String, BigInteger, BigInteger, BigInteger, String, String>> fetchWholesaler(BigInteger _upc) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_FETCHWHOLESALER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_upc)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint8>() {}, new TypeReference<Address>() {}, new TypeReference<Utf8String>() {}));
        return new RemoteFunctionCall<Tuple9<BigInteger, BigInteger, BigInteger, String, BigInteger, BigInteger, BigInteger, String, String>>(function,
                new Callable<Tuple9<BigInteger, BigInteger, BigInteger, String, BigInteger, BigInteger, BigInteger, String, String>>() {
                    @Override
                    public Tuple9<BigInteger, BigInteger, BigInteger, String, BigInteger, BigInteger, BigInteger, String, String> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple9<BigInteger, BigInteger, BigInteger, String, BigInteger, BigInteger, BigInteger, String, String>(
                                (BigInteger) results.get(0).getValue(), 
                                (BigInteger) results.get(1).getValue(), 
                                (BigInteger) results.get(2).getValue(), 
                                (String) results.get(3).getValue(), 
                                (BigInteger) results.get(4).getValue(), 
                                (BigInteger) results.get(5).getValue(), 
                                (BigInteger) results.get(6).getValue(), 
                                (String) results.get(7).getValue(), 
                                (String) results.get(8).getValue());
                    }
                });
    }

    public RemoteFunctionCall<Tuple2<BigInteger, BigInteger>> fetchitemHistory(BigInteger _upc) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_FETCHITEMHISTORY, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_upc)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}));
        return new RemoteFunctionCall<Tuple2<BigInteger, BigInteger>>(function,
                new Callable<Tuple2<BigInteger, BigInteger>>() {
                    @Override
                    public Tuple2<BigInteger, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple2<BigInteger, BigInteger>(
                                (BigInteger) results.get(0).getValue(), 
                                (BigInteger) results.get(1).getValue());
                    }
                });
    }

    public RemoteFunctionCall<Boolean> isManufacturer(String account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_ISMANUFACTURER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, account)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<Boolean> isOwner() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_ISOWNER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<Boolean> isRetailer(String account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_ISRETAILER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, account)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<Boolean> isWholesaler(String account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_ISWHOLESALER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, account)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<TransactionReceipt> kill() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_KILL, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<String> ownerLookup() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_OWNERLOOKUP, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<TransactionReceipt> packageItemByManufacturer(BigInteger _upc) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_PACKAGEITEMBYMANUFACTURER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_upc)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> produceItemByManufacturer(BigInteger _upc, String _originManufacturerName, String _productNotes, BigInteger _price) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_PRODUCEITEMBYMANUFACTURER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_upc), 
                new org.web3j.abi.datatypes.Utf8String(_originManufacturerName), 
                new org.web3j.abi.datatypes.Utf8String(_productNotes), 
                new org.web3j.abi.datatypes.generated.Uint256(_price)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> purchaseItemByRetailer(BigInteger _upc, String _retailerName) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_PURCHASEITEMBYRETAILER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_upc), 
                new org.web3j.abi.datatypes.Utf8String(_retailerName)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> purchaseItemByWholesaler(BigInteger _upc, String _wholesalerName) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_PURCHASEITEMBYWHOLESALER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_upc), 
                new org.web3j.abi.datatypes.Utf8String(_wholesalerName)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> receivedItemByRetailer(BigInteger _upc) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_RECEIVEDITEMBYRETAILER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_upc)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> receivedItemByWholesaler(BigInteger _upc) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_RECEIVEDITEMBYWHOLESALER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_upc)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> renounceManufacturer() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_RENOUNCEMANUFACTURER, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> renounceOwnership() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_RENOUNCEOWNERSHIP, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> renounceRetailer() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_RENOUNCERETAILER, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> renounceWholesaler() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_RENOUNCEWHOLESALER, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> sellItemByManufacturer(BigInteger _upc, BigInteger _price) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SELLITEMBYMANUFACTURER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_upc), 
                new org.web3j.abi.datatypes.generated.Uint256(_price)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> sellItemByWholesaler(BigInteger _upc, BigInteger _price) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SELLITEMBYWHOLESALER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_upc), 
                new org.web3j.abi.datatypes.generated.Uint256(_price)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> shippedItemByManufacturer(BigInteger _upc) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SHIPPEDITEMBYMANUFACTURER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_upc)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> shippedItemByWholesaler(BigInteger _upc) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SHIPPEDITEMBYWHOLESALER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_upc)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> transferOwnership(String newOwner) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_TRANSFEROWNERSHIP, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, newOwner)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    @Deprecated
    public static SupplyChain load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new SupplyChain(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static SupplyChain load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new SupplyChain(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static SupplyChain load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new SupplyChain(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static SupplyChain load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new SupplyChain(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<SupplyChain> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(SupplyChain.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    public static RemoteCall<SupplyChain> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(SupplyChain.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<SupplyChain> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(SupplyChain.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<SupplyChain> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(SupplyChain.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }

    public static class ForSaleByManufacturerEventResponse extends BaseEventResponse {
        public BigInteger upc;
    }

    public static class ForSaleByWholesalerEventResponse extends BaseEventResponse {
        public BigInteger upc;
    }

    public static class ManufacturerAddedEventResponse extends BaseEventResponse {
        public String account;
    }

    public static class ManufacturerRemovedEventResponse extends BaseEventResponse {
        public String account;
    }

    public static class PackagedByManufacturerEventResponse extends BaseEventResponse {
        public BigInteger upc;
    }

    public static class ProduceByManufacturerEventResponse extends BaseEventResponse {
        public BigInteger upc;
    }

    public static class PurchasedByRetailerEventResponse extends BaseEventResponse {
        public BigInteger upc;
    }

    public static class PurchasedByWholesalerEventResponse extends BaseEventResponse {
        public BigInteger upc;
    }

    public static class ReceivedByRetailerEventResponse extends BaseEventResponse {
        public BigInteger upc;
    }

    public static class ReceivedByWholesalerEventResponse extends BaseEventResponse {
        public BigInteger upc;
    }

    public static class RetailerAddedEventResponse extends BaseEventResponse {
        public String account;
    }

    public static class RetailerRemovedEventResponse extends BaseEventResponse {
        public String account;
    }

    public static class ShippedByManufacturerEventResponse extends BaseEventResponse {
        public BigInteger upc;
    }

    public static class ShippedByWholesalerEventResponse extends BaseEventResponse {
        public BigInteger upc;
    }

    public static class TransferOwnershipEventResponse extends BaseEventResponse {
        public String oldOwner;

        public String newOwner;
    }

    public static class WholesalerAddedEventResponse extends BaseEventResponse {
        public String account;
    }

    public static class WholesalerRemovedEventResponse extends BaseEventResponse {
        public String account;
    }
}
